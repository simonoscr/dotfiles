default:
  image: nixpkgs/cachix-flakes
  before_script:
    - git config --global user.email ""
    - git config --global user.name "Gitlab CI"
    - git config --global push.followTags true
    - git checkout $CI_COMMIT_REF_NAME
    - git remote set-url origin "https://gitlab-ci:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    - git pull origin $CI_COMMIT_REF_NAME
    - cachix use "$CACHIX_CACHE_NAME"

variables:
  NIX_PATH: nixpkgs=channel:nixos-unstable
  FLAKEREF: $CI_PROJECT_DIR
  CACHIX_CACHE_NAME: simonoscr

stages:
  - cleanup
  - lint
  - test
  - build
#  - build_iso
  - release

cleanup:
  stage: cleanup
  script:
    - echo "remove dead code"
    #- nix run github:astro/deadnix -- -eV
    - nix-shell -p deadnix --run "deadnix -eV"
    - |
      if ! git diff --quiet --exit-code; then
        git add -A;
        git commit -m "ref(nix): cleanup dead nix code";
        git push -o ci.skip origin "$CI_COMMIT_REF_NAME"
      fi

lint:
  stage: lint
  script:
    - nix-shell -p alejandra --run "alejandra -V ;alejandra ."
    #- nix run github:kamadorueda/alejandra .
    - nix-shell -p statix --run "statix check; statix fix -d; statix fix"
    - |
      if ! git diff --quiet --exit-code; then
        git add -A;
        git commit -m "style(nix): format nix code";
        git push -o ci.skip origin "$CI_COMMIT_REF_NAME"
      fi

build:
  stage: build
  script:
    #- cachix watch-exec $CACHIX_CACHE_NAME -- nix build '${CI_PROJECT_DIR}.#nixosConfigurations.cosmos.config.system.build.toplevel'
    #- nix build '.#nixosConfigurations.cosmos.config.system.build.toplevel' | cachix push $CACHIX_CACHE_NAME
    - nix-shell -p jq --run "nix flake archive --json | jq -r '.path,(.inputs|to_entries[].value.path)' | cachix push $CACHIX_CACHE_NAME"
  artifacts:
    paths:
      - result
  only:
    - main

#build_nixos_iso:
#  stage: build_iso
#  cache:
#    key: "${CI_COMMIT_REF_SLUG}"
#    paths:
#      - /nix/store
#  script:
#    - nix build -L .#iso
#    #- nix build .#install-iso
#  artifacts:
#    paths:
#      - result
#  only:
#    - main

release:
  image: node:slim
  stage: release
#  needs:
#    - job: build_nixos_iso
#      artifacts: true
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install --location=global semantic-release @semantic-release/gitlab @semantic-release/changelog conventional-changelog-conventionalcommits@7.0.2 @semantic-release/commit-analyzer @semantic-release/git
  script:
    - semantic-release
  only:
    - main
