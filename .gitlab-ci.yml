default:
  image: nixos/nix
  before_script:
    - echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
    - git config --global user.email ""
    - git config --global user.name "Gitlab CI"
    - git config --global push.followTags true
    - git checkout $CI_COMMIT_REF_NAME
    - git remote set-url origin "https://gitlab-ci-token:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
  after_script:
    - git push -o ci.skip origin "$CI_COMMIT_REF_NAME"

stages:
  - cleanup
  - lint
  - test
  - release

cleanup:
  stage: cleanup
  script:
    - echo "remove dead code"
    - nix-shell -p deadnix --run "deadnix -eV"
    - |
      if ! git diff --quiet --exit-code; then
        git add -A;
        git commit -m "chore: cleanup dead code";
      fi

lint:
  stage: lint
  script:
    - nix-shell -p alejandra --run "alejandra -V ;alejandra ."
    - |
      if ! git diff --quiet --exit-code; then
        git add -A;
        git commit -m "chore: format code";
      fi
  needs:
    - cleanup

test:
  stage: test
  variables:
    NH_NOM: "1"   # Use nix-output-monitor for the build process
  script:
    - nix flake show
    - nix flake check --version --debug
    - nix flake check --no-build
  needs:
    - lint

release:
  image: node:slim
  stage: release
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install --location=global semantic-release @semantic-release/gitlab @semantic-release/changelog conventional-changelog-conventionalcommits @semantic-release/commit-analyzer @semantic-release/git
  script:
    - semantic-release
  needs:
    - cleanup
    - lint
    - test
  only:
    - main
